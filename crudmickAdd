#!/bin/bash
dossier=${PWD##*/}

# Définition des couleurs pour l'affichage
GREEN="\e[32m"
RED="\e[31m"
YELLOW="\e[33m"
NC="\e[0m" # No Color

docker-compose down

clear

# on vérifie la présence de compose.yaml
if [ ! -f "compose.yaml" ]; then
    echo -e "${RED}Erreur : le fichier compose.yaml n'existe pas.${NC}"
    exit 1
fi

docker-compose down

echo -e "${GREEN}Lancement de l'initialisation des sous-modules Git et de l'installation des dépendances${NC}"

echo -e "${YELLOW}CE SCRIPT VA EFFECTUER LES OPÉRATIONS SUIVANTES :${NC}"
echo -e "- ${GREEN}git init si inexistant${NC}"
echo -e "- ${GREEN}lancement du docker-compose${NC}"
echo -e "- ${GREEN}Ajouter et initialiser les sous-modules Git de crudmick ${NC}"
echo -e "- ${GREEN}Mettre à jour les sous-modules existants${NC}"
echo -e "${YELLOW}INSTALLER LES DÉPENDANCES COMPOSER SUIVANTES :${NC}"
echo -e "- ${GREEN}symfony/password-hasher${NC} : Hashage des mots de passe."
echo -e "- ${GREEN}symfony/security-bundle${NC} : Gestion de la sécurité et des autorisations."
echo -e "- ${GREEN}--dev squizlabs/php_codesniffer ${NC} : formater du code PHP."
echo -e "- ${GREEN}twig/string-extra ${NC} : Manipulation de chaînes de caractères."
echo -e "- ${GREEN}symfony/validator${NC} : Vérification de la validité des données."
echo -e "${YELLOW}On écrase le security.yaml en ajoutant les nouvelles configurations, les routes ADMIN/SUPERADMIN ...${NC}"
echo -e "${YELLOW}On ajoute liip dans services pour qu'il soit accessible dans les services.${NC}"
echo -e "${YELLOW}Création de l'entité et du repository parametre...${NC}"
echo -e "${GREEN}Mise à jour de la base de données pour créer l'entité Parametre...${NC}"

echo -e "${YELLOW}Veuillez appuyer sur une touche pour continuer...${NC}"
read -n 1 -s

#si on a pas de .git on lance git init
if [ ! -d ".git" ]; then
    git init
fi

#on lance le docker-compose
docker compose up -d

#on attend que le container soit lancé
#on attend que le container soit lancé
while [ -z "$(docker inspect -f '{{.State.Running}}' "${dossier}-php-1")" ]; do
    sleep 1
done

#on lance git config --global --add safe.directory /app
#docker exec -it "${dossier}-php-1" git config --global --add safe.directory /app


# Parcourir et ajouter chaque dépendance
docker exec -it "${dossier}-php-1" composer require symfony/password-hasher symfony/security-bundle symfony/validator  twig/string-extra --no-interaction

docker exec -it "${dossier}-php-1" composer require --dev squizlabs/php_codesniffer zenstruck/foundry --no-interaction

user=$(whoami)
#On ajoute l'utilisateur dans le docker
docker exec -it "${dossier}-php-1" useradd --uid $(id -u ${user}) ${user}
#On l'ajoute au groupe root
docker exec -it "${dossier}-php-1" usermod -aG root ${user}

# Changer les permissions
echo -e "${GREEN}Changement des permissions${NC}"

docker exec -it "${dossier}-php-1" chown ${user}: .*
docker exec -it "${dossier}-php-1" chown -R ${user}: assets bin composer.* config LICENSE migrations public src templates var vendor
chown  ${user}: ../$dossier

#on clone le git avec les fichiers à copier
git clone git@github.com:cadot-eu/baseFilesCrudmick.git
mkdir -p src/DataFixtures
cp baseFilesCrudmick/src/DataFixtures/ParametresFixtures.php src/DataFixtures/ParametresFixtures.php
cp baseFilesCrudmick/security.yaml config/packages/security.yaml
cp baseFilesCrudmick/Parametres.php src/Entity/Parametres.php
cp baseFilesCrudmick/ParametresRepository.php src/Repository/ParametresRepository.php
cp baseFilesCrudmick/SecurityController.php src/Controller/SecurityController.php
cp baseFilesCrudmick/ResetPasswordController.php src/Controller/ResetPasswordController.php
cp baseFilesCrudmick/User.php src/Entity/User.php
cp baseFilesCrudmick/ResetPasswordRequest.php src/Entity/ResetPasswordRequest.php
cp baseFilesCrudmick/UserRepository.php src/Repository/UserRepository.php
mkdir -p templates/security
cp baseFilesCrudmick/login.html.twig templates/security/login.html.twig


#on ajoute à la fin de config/services.yaml
#si app.filter.all_filter: absent
#si absent, on ajoute
if ! grep -q "app.filter.all_filter:" config/services.yaml; then
cat << EOF >> config/services.yaml
    app.filter.all_filter:
        class: App\Imagine\Filter\Loader\AllImagineFilter
        tags:
            - { name: "liip_imagine.filter.loader", loader: "allfilter" }
    Liip\ImagineBundle\Service\FilterService:
        alias: "liip_imagine.service.filter"

EOF
fi

# Chemin vers le fichier .gitmodules
GITMODULES_FILE=".gitmodules"

# Liste des sous-modules à ajouter
declare -A submodules=(
    ["src/Controller/base"]="git@github.com:cadot-eu/basecontroller.git"
    ["src/Command/base"]="git@github.com:cadot-eu/basecommand.git"
    ["src/EventSubscriber/base"]="git@github.com:cadot-eu/basesubscriber.git"
    ["src/Imagine"]="git@github.com:cadot-eu/baseimagine.git"
    ["src/Service/base"]="git@github.com:cadot-eu/baseservice.git"
    ["src/Twig/base"]="git@github.com:cadot-eu/basetwig.git"
    ["src/Entity/base"]="git@github.com:cadot-eu/basetraits.git"
    ["src/EventListener/base"]="git@github.com:cadot-eu/baselisteners.git"
    ["templates/base"]="git@github.com:cadot-eu/basetemplate.git"
    ["tests/basetests"]="git@github.com:cadot-eu/basetests.git"
    ["basetools"]="git@github.com:cadot-eu/basetools.git"
    ["src/Repository/base"]="git@github.com:cadot-eu/baseRepository.git"
    ["src/Security"]="git@github.com:cadot-eu/basesecurity.git"
    ["assets/js"]="git@github.com:cadot-eu/basejs.git"
    ["assets/controllers/base"]="git@github.com:cadot-eu/basestimulus.git"
)

# on ajoute au début du fichier assets/app.css bootstrap icons
sed -i '1s|^|@import url("https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css");\n|' assets/styles/app.css


# on ajoute bootstrap dans app.js juste avant import './styles/app.css';
sed -i "s|import './styles/app.css';|import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap';\nimport './styles/app.css';|" assets/app.js


# Fonction pour ajouter un sous-module
add_submodule() {
    local path="$1"
    local url="$2"
    
    # Vérifier si le sous-module existe déjà dans .gitmodules
    if git config -f "$GITMODULES_FILE" --get-regexp "^submodule\..*\.path$" | grep -q "$path"; then
        echo "Le sous-module '$path' existe déjà dans .gitmodules."
    else
        # Ajouter le sous-module
        git submodule add -b main "$url" "$path"
        git config -f "$GITMODULES_FILE" "submodule.$path.active" true
    fi
}

# Parcourir et ajouter chaque sous-module
for path in "${!submodules[@]}"; do
    url="${submodules[$path]}"
    add_submodule "$path" "$url"
done

# Initialiser et mettre à jour les sous-modules
git submodule update --init --recursive

#installation de crudmick
git clone git@github.com:cadot-eu/crudmick.git src/Command/crudmick

docker exec -it "${dossier}-php-1" php bin/console d:s:u --force

docker exec -it "${dossier}-php-1" php bin/console importmap:require bootstrap
docker exec -it "${dossier}-php-1" mkdir templates/admin
docker exec -it "${dossier}-php-1" cp templates/base.html.twig templates/admin/.
docker exec -it "${dossier}-php-1" php bin/console d:f:l -n
docker exec -it "${dossier}-php-1" php bin/console crud:gen:con user
docker exec -it "${dossier}-php-1" php bin/console crud

