#!/bin/bash
# Script: git-add-private
# Usage: ./git-add-private

set -e




if [ -z "$1" ]; then
    echo "Usage: $0 <url-du-repository>"
    exit 1
fi

REPO_URL="$1"
if [[ ! "$REPO_URL" =~ ^https?:// ]]; then
    echo "Erreur : le paramètre doit être une URL de repository (ex: https://github.com/owner/repo)"
    exit 1
fi
REPO_NAME=$(basename "$REPO_URL" .git)
KEY_NAME="id_ed25519_${REPO_NAME}"
KEY_PATH="$HOME/.ssh/$KEY_NAME"

# Génère la clé SSH si elle n'existe pas déjà
if [ -f "$KEY_PATH" ]; then
    echo "[INFO] La clé $KEY_PATH existe déjà."
else
    ssh-keygen -t ed25519 -f "$KEY_PATH" -C "$USER@$REPO_NAME" -N ""
    echo "[INFO] Clé SSH générée : $KEY_PATH"
fi

# Affiche la clé publique
echo -e "\nAjoute cette clé publique à GitHub (Deploy Key ou SSH Key) :"
cat "$KEY_PATH.pub"
# Génère l'URL pour ajouter la clé sur GitHub
GITHUB_KEY_URL=""
if [[ "$REPO_URL" =~ github.com[:/]+([^/]+)/([^/.]+) ]]; then
    OWNER="${BASH_REMATCH[1]}"
    REPO="${BASH_REMATCH[2]}"
    GITHUB_KEY_URL="https://github.com/$OWNER/$REPO/settings/keys/new"
    echo -e "\nOuvre cette URL pour ajouter la clé : $GITHUB_KEY_URL"
fi
echo -e "\nAppuie sur Entrée quand c'est fait..."
read

# Configure temporairement l'utilisation de la clé pour ce repo
GIT_SSH_COMMAND="ssh -i $KEY_PATH" git clone "$REPO_URL"
