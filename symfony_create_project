#!/bin/bash


# Définition des couleurs pour l'affichage
GREEN="\e[32m"
RED="\e[31m"
YELLOW="\e[33m"
NC="\e[0m" # No Color

clear
echo -e "${GREEN}Lancement de l'installation de Symfony${NC}"

# Installation des dépendances avec Composer
echo -e "${GREEN}INSTALLATION DES DÉPENDANCES AVEC COMPOSER${NC}"
echo -e "Les paquets suivants seront installés :\n"

echo -e "${YELLOW}DÉPENDANCES PRINCIPALES :${NC}"
echo -e "- ${GREEN}symfony/asset-mapper${NC} : Permet de mapper les chemins des fichiers vers une URL pour les servir."
echo -e "- ${GREEN}symfony/asset${NC} : Gestion des fichiers statiques (CSS, JS, images...)."
echo -e "- ${GREEN}symfony/twig-pack${NC} : Intègre le moteur de templates Twig."
echo -e "- ${GREEN}symfony/orm-pack${NC} : Contient Doctrine ORM pour la gestion de la base de données."
echo -e "- ${GREEN}symfony/mercure-bundle${NC} : Permet la communication en temps réel via le serveur Mercure."
echo -e "- ${GREEN}symfony/panther${NC} : Outil de test d'interface utilisateur avec un navigateur web."
echo -e "- ${GREEN}symfony/mailer${NC} : Gestion des e-mails dans Symfony."
echo -e "- ${GREEN}symfony/ux-turbo${NC} : Amélioration de l'expérience utilisateur avec Turbo.js."
echo -e "- ${GREEN}symfony/twig-bundle${NC} : Intégration complète de Twig dans Symfony."
echo -e "- ${GREEN}symfony/monolog-bundle${NC} : Gestion des logs avec Monolog."
echo -e "- ${GREEN}php-flasher/flasher-symfony${NC} : Affichage de notifications flash."
echo -e "- ${GREEN}symfonycasts/verify-email-bundle${NC} : Vérification des adresses e-mail."
echo -e "- ${GREEN}liip/imagine-bundle${NC} : Manipulation et optimisation des images."
echo -e "- ${GREEN}symfony/translation${NC} : Gestion des traductions et de l'internationalisation."
echo -e "- ${GREEN}symfonycasts/reset-password-bundle${NC} : Réinitialisation de mot de passe."

echo -e "\n${YELLOW}DÉPENDANCES POUR LE DÉVELOPPEMENT :${NC}"
echo -e "- ${GREEN}symfony/debug-pack${NC} : Outils de débogage pour Symfony."
echo -e "- ${GREEN}symfony/maker-bundle${NC} : Génération de code (contrôleurs, entités, formulaires...)."
echo -e "- ${GREEN}symfony/phpunit-bridge${NC} : Intégration de PHPUnit pour les tests unitaires."
echo -e "- ${GREEN}phpunit/phpunit${NC} : Outil de tests unitaires pour PHP."

echo -e "\n${GREEN}NETTOYAGE${NC}"
echo -e "- Suppression du répertoire ${RED}.git${NC} pour éviter les conflits de versionnement."
echo -e "- Arrêt des conteneurs Docker en cours d'exécution."
echo -e "- Reconstruction des conteneurs Docker pour prendre en compte les nouvelles dépendances."
echo -e "- Modification des permissions des fichiers et répertoires si nécessaire."
echo -e "- Suppression des fichiers ACPI (si applicable)."

echo -e "\n${YELLOW}Veuillez appuyer sur une touche pour lancer l'installation...${NC}"
read -n 1 -s

# Vérification des prérequis
if ! command -v git &> /dev/null; then
    echo -e "${RED}Erreur : Git n'est pas installé.${NC}"
    exit 1
fi

if ! command -v docker &> /dev/null; then
    echo -e "${RED}Erreur : Docker n'est pas installé.${NC}"
    exit 1
fi

if ! command -v docker compose &> /dev/null; then
    echo -e "${RED}Erreur : Docker Compose n'est pas installé.${NC}"
    exit 1
fi

# Vérification du paramètre
if [ -z "$1" ]; then
    echo -e "${RED}Erreur : Vous devez fournir un nom de dossier.${NC}"
    echo -e "${YELLOW}Usage : $0 mon_projet${NC}"
    exit 1
fi

PROJECT_NAME=$1

# Clonage du projet
echo -e "${GREEN}Clonage du dépôt Git dans le dossier $PROJECT_NAME...${NC}"
if git clone git@github.com:cadot-eu/symfony.git "$PROJECT_NAME"; then
    echo -e "${GREEN}Clonage réussi.${NC}"
else
    echo -e "${RED}Échec du clonage. Vérifiez votre connexion ou votre accès SSH.${NC}"
    exit 1
fi

cd "$PROJECT_NAME" || exit 1

# Construction des conteneurs Docker
echo -e "${GREEN}Construction des images Docker...${NC}"
docker compose build --no-cache --pull

# Lancement des conteneurs
echo -e "${GREEN}Lancement des conteneurs Docker...${NC}"
docker compose up --pull always -d --wait

# Installation des dépendances Symfony
echo -e "${GREEN}Installation des librairies Symfony...${NC}"
docker exec -it "${PROJECT_NAME}-php-1" composer require \
symfony/asset-mapper \
symfony/asset \
symfony/twig-pack \
symfony/orm-pack \
symfony/mercure-bundle \
symfony/panther \
symfony/mailer \
symfony/ux-turbo \
symfony/twig-bundle \
symfony/asset-mapper \
symfony/asset \
symfony/twig-pack \
symfony/monolog-bundle \
form \
php-flasher/flasher-symfony \
symfonycasts/verify-email-bundle \
liip/imagine-bundle \
symfony/translation \
symfonycasts/reset-password-bundle --no-interaction


# Ajout des dev
echo -e "${GREEN}Installation de la debug bar et maker-bundle...${NC}"
docker exec -it "${PROJECT_NAME}-php-1" composer require --dev symfony/debug-pack symfony/maker-bundle symfony/phpunit-bridge  symfony/phpunit-bridge phpunit/phpunit

# Suppression du répertoire .git
echo -e "${YELLOW}Suppression du répertoire .git...${NC}"
docker exec -it "${PROJECT_NAME}-php-1" rm -rf .git

# Arrêt des conteneurs Docker
echo -e "${GREEN}Arrêt des conteneurs Docker...${NC}"
docker compose down

# Reconstruction après modifications
echo -e "${GREEN}Reconstruction des conteneurs Docker...${NC}"
docker compose build

# Relancement des conteneurs
echo -e "${GREEN}Relancement des conteneurs Docker...${NC}"
docker compose up -d

# Changer les permissions
echo -e "${GREEN}Changement des permissions${NC}"
sudo chown $USER: .*
sudo chown $USER: *
sudo chown -R $USER: assets bin composer.* config LICENSE migrations public src templates var vendor
sudo chown $USER: ../$1

# Affichage des conteneurs actifs
echo -e "${GREEN}Liste des conteneurs actifs :${NC}"
docker ps